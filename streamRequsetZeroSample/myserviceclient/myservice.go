// Code generated by goctl. DO NOT EDIT.
// Source: myservice.proto

package myserviceclient

import (
	"context"

	"demo-go/streamRequsetZeroSample/types/myapp/myservice"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MyRequest  = myservice.MyRequest
	MyResponse = myservice.MyResponse

	MyService interface {
		StreamRequests(ctx context.Context, opts ...grpc.CallOption) (myservice.MyService_StreamRequestsClient, error)
	}

	defaultMyService struct {
		cli zrpc.Client
	}
)

func NewMyService(cli zrpc.Client) MyService {
	return &defaultMyService{
		cli: cli,
	}
}

func (m *defaultMyService) StreamRequests(ctx context.Context, opts ...grpc.CallOption) (myservice.MyService_StreamRequestsClient, error) {
	client := myservice.NewMyServiceClient(m.cli.Conn())
	return client.StreamRequests(ctx, opts...)
}
